# Configuration for metric instances
apiVersion: config.istio.io/v1alpha2
kind: instance
metadata:
  name: androidrequestcount
  namespace: istio-system
spec:
  compiledTemplate: metric
  params:
    value: "1" # count each request
    dimensions:
      reporter: conditional((context.reporter.kind | "inbound") == "outbound", "client", "server")
      source: source.workload.name | "unknown"
      destination: destination.workload.name | "unknown"
      message: '"Hello CoffeeJUG!"'
    monitored_resource_type: '"UNSPECIFIED"'
---
# Configuration for a Prometheus handler
apiVersion: config.istio.io/v1alpha2
kind: handler
metadata:
  name: androidhandler
  namespace: istio-system
spec:
  compiledAdapter: prometheus
  params:
    metrics:
      - name: android_request_count # Prometheus metric name
        instance_name: androidrequestcount.instance.istio-system # Mixer instance name (fully-qualified)
        kind: COUNTER
        label_names:
          - reporter
          - source
          - destination
          - message
---
# Rule to send metric instances to a Prometheus handler
apiVersion: "config.istio.io/v1alpha2"
kind: rule
metadata:
  name: androidprom
  namespace: istio-system
spec:
#  match: '".*Android.*".matches(request.headers["user-agent"])' # match only for the android users
  actions:
    - handler: androidhandler.prometheus
      instances:
        - androidrequestcount.metric
